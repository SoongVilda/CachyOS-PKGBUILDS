From e858052e7b3e54ee98c77529bc07bb938e8703a5 Mon Sep 17 00:00:00 2001
From: Vladislav Nepogodin <nepogodin.vlad@gmail.com>
Date: Tue, 22 Mar 2022 01:34:02 +0400
Subject: [PATCH] Force LTO & Cleanup

---
 CMakeLists.txt                       |  7 ++++++-
 src/libcalamares/CMakeLists.txt      |  2 ++
 src/libcalamares/geoip/GeoIPJSON.cpp |  5 -----
 src/libcalamares/geoip/GeoIPJSON.h   |  3 ++-
 src/libcalamares/geoip/Handler.cpp   |  7 -------
 src/libcalamares/geoip/Handler.h     | 16 +++++++++-------
 src/libcalamaresui/CMakeLists.txt    |  2 ++
 7 files changed, 21 insertions(+), 21 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 29f3df0..a8cbe5e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -178,7 +178,9 @@ endif()
 
 # CMake Modules
 include( CMakePackageConfigHelpers )
+if (BUILD_TESTING)
 include( CTest )
+endif()
 include( FeatureSummary )
 
 # Calamares Modules
@@ -202,6 +204,9 @@ set( CMAKE_C_FLAGS_MINSIZEREL       "-Os -DNDEBUG" )
 set( CMAKE_C_FLAGS_RELEASE          "-O4 -DNDEBUG" )
 set( CMAKE_C_FLAGS_RELWITHDEBINFO   "-O2 -g" )
 
+set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -flto")
+set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -flto")
+
 set( CMAKE_SHARED_LINKER_FLAGS      "-Wl,--no-undefined -Wl,--fatal-warnings" )
 
 if( CMAKE_CXX_COMPILER_ID MATCHES "Clang" )
@@ -261,7 +266,7 @@ if( CMAKE_COMPILER_IS_GNUCXX )
     if( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 4.9 OR
         CMAKE_CXX_COMPILER_VERSION VERSION_EQUAL 4.9 )
         message( STATUS "Found GNU g++ ${CMAKE_CXX_COMPILER_VERSION}, enabling colorized error messages." )
-        set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fdiagnostics-color=auto" )
+        set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fdiagnostics-color=always" )
     endif()
 endif()
 
diff --git a/src/libcalamares/CMakeLists.txt b/src/libcalamares/CMakeLists.txt
index 2cf0342..532bd81 100644
--- a/src/libcalamares/CMakeLists.txt
+++ b/src/libcalamares/CMakeLists.txt
@@ -202,6 +202,7 @@ foreach( subdir geoip locale modulesystem network partition utils )
 endforeach()
 
 
+if (BUILD_TESTING)
 ### TESTING
 #
 #
@@ -324,3 +325,4 @@ if ( Qt5DBus_FOUND )
     add_executable( test_automount partition/calautomount.cpp )
     target_link_libraries( test_automount Calamares::calamares Qt5::DBus )
 endif()
+endif()
diff --git a/src/libcalamares/geoip/GeoIPJSON.cpp b/src/libcalamares/geoip/GeoIPJSON.cpp
index 9869d7a..5d5e567 100644
--- a/src/libcalamares/geoip/GeoIPJSON.cpp
+++ b/src/libcalamares/geoip/GeoIPJSON.cpp
@@ -21,11 +21,6 @@ namespace CalamaresUtils
 namespace GeoIP
 {
 
-GeoIPJSON::GeoIPJSON( const QString& attribute )
-    : Interface( attribute.isEmpty() ? QStringLiteral( "time_zone" ) : attribute )
-{
-}
-
 /** @brief Indexes into a map @m by selectors @p l
  *
  * Each element of @p l is an index into map @m or a sub-map thereof,
diff --git a/src/libcalamares/geoip/GeoIPJSON.h b/src/libcalamares/geoip/GeoIPJSON.h
index e9be141..5817e34 100644
--- a/src/libcalamares/geoip/GeoIPJSON.h
+++ b/src/libcalamares/geoip/GeoIPJSON.h
@@ -33,7 +33,8 @@ public:
      * If an empty string is passed in (not a valid attribute name),
      * then "time_zone" is used.
      */
-    explicit GeoIPJSON( const QString& attribute = QString() );
+    explicit GeoIPJSON( const QString& attribute = QString() )
+    : Interface( attribute.isEmpty() ? QStringLiteral( "time_zone" ) : attribute ) { }
 
     virtual RegionZonePair processReply( const QByteArray& ) override;
     virtual QString rawReply( const QByteArray& ) override;
diff --git a/src/libcalamares/geoip/Handler.cpp b/src/libcalamares/geoip/Handler.cpp
index 8ef72d9..dce5fd2 100644
--- a/src/libcalamares/geoip/Handler.cpp
+++ b/src/libcalamares/geoip/Handler.cpp
@@ -47,11 +47,6 @@ namespace CalamaresUtils
 namespace GeoIP
 {
 
-Handler::Handler()
-    : m_type( Type::None )
-{
-}
-
 Handler::Handler( const QString& implementation, const QString& url, const QString& selector )
     : m_type( Type::None )
     , m_url( url )
@@ -81,8 +76,6 @@ Handler::Handler( const QString& implementation, const QString& url, const QStri
 #endif
 }
 
-Handler::~Handler() {}
-
 static std::unique_ptr< Interface >
 create_interface( Handler::Type t, const QString& selector )
 {
diff --git a/src/libcalamares/geoip/Handler.h b/src/libcalamares/geoip/Handler.h
index e13198b..13893ef 100644
--- a/src/libcalamares/geoip/Handler.h
+++ b/src/libcalamares/geoip/Handler.h
@@ -29,7 +29,7 @@ namespace GeoIP
  * error or if the configuration is not understood. For an
  * async API, use query().
  */
-class DLLEXPORT Handler
+class Handler
 {
 public:
     enum class Type
@@ -41,7 +41,9 @@ public:
     };
 
     /** @brief An unconfigured handler; this always returns errors. */
-    Handler();
+    Handler()
+    : m_type( Type::None ) {}
+
     /** @brief A handler for a specific GeoIP source.
      *
      * The @p implementation name selects an implementation; currently JSON and XML
@@ -50,7 +52,7 @@ public:
      */
     Handler( const QString& implementation, const QString& url, const QString& selector );
 
-    ~Handler();
+    ~Handler() = default;
 
     /** @brief Synchronously get the GeoIP result.
      *
@@ -70,10 +72,10 @@ public:
     /// @brief Like query, but don't interpret the contents
     QFuture< QString > queryRaw() const;
 
-    bool isValid() const { return m_type != Type::None; }
-    Type type() const { return m_type; }
-    QString url() const { return m_url; }
-    QString selector() const { return m_selector; }
+    constexpr bool isValid() const { return m_type != Type::None; }
+    constexpr Type type() const { return m_type; }
+    inline QString url() const { return m_url; }
+    inline QString selector() const { return m_selector; }
 
 private:
     Type m_type;
diff --git a/src/libcalamaresui/CMakeLists.txt b/src/libcalamaresui/CMakeLists.txt
index bd2e79f..68cdad2 100644
--- a/src/libcalamaresui/CMakeLists.txt
+++ b/src/libcalamaresui/CMakeLists.txt
@@ -115,6 +115,7 @@ foreach( subdir modulesystem utils viewpages widgets )
     install( FILES ${subdir_headers} DESTINATION include/libcalamares/${subdir} )
 endforeach()
 
+if (BUILD_TESTING)
 calamares_add_test(
     test_libcalamaresuipaste
     SOURCES
@@ -123,3 +124,4 @@ calamares_add_test(
     LIBRARIES
         calamaresui
 )
+endif()
-- 
2.35.1

